{
    "name": "expressmocks",
    "version": "2.0.0",
    "description": "A small tool to support unit testing of express request handlers",
    "main": "lib/cjs/ExpressMocks.js",
    "module": "lib/esm/ExpressMocks.js",
    "types": "lib/cjs/ExpressMocks.d.ts",
    "files": [
        "lib/*/ExpressMocks.*"
    ],
    "scripts": {
        "build": "npm run compile && npm run lint && npm run test",
        "compile": "npm run compile:es6 && npm run compile:cjs",
        "compile:es6": "tsc -p tsconfig-es6.json",
        "compile:cjs": "tsc",
        "test": "npm run lint && npm run coverage && npm run test:sample",
        "lint": "eslint 'src/**/*.ts'",
        "lint:fix": "eslint 'src/**/*.ts' --fix",
        "coverage": "npm run coverage:run && npm run coverage:check",
        "coverage:run": "nyc _mocha 'src/**/*Spec.ts'",
        "coverage:check": "nyc check-coverage  --statements 99 --branches 82 --functions 99  --lines 99",
        "test:unit": "mocha 'src/**/*Spec.ts'",
        "test:sample": "npm run test:cjs-sample && npm run test:esm-sample",
        "test:cjs-sample": "cd test/cjs-sample && npm ci && npm run test",
        "test:esm-sample": "cd test/esm-sample && npm ci && npm run test",
        "sample-installs": "cd test/cjs-sample && npm install && cd ../esm-sample && npm install",
        "cjs": "cd test/cjs-sample && npm run",
        "esm": "cd test/esm-sample && npm run"
    },
    "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/metro-nom/node-expressmocks.git"
    },
    "keywords": [
        "nodejs",
        "express",
        "sinon",
        "mock",
        "mocha"
    ],
    "author": "Carsten Rohrbach <carsten.rohrbach@codecentric.de>",
    "license": "MIT",
    "bugs": {
        "url": "https://github.com/metro-nom/node-expressmocks/issues"
    },
    "homepage": "https://github.com/metro-nom/node-expressmocks#readme",
    "peerDependencies": {
        "express": ">=4.0.0",
        "sinon": ">=10.0.0"
    },
    "devDependencies": {
        "@types/chai": "^4.3.4",
        "@types/chai-as-promised": "^7.1.5",
        "@types/data-driven": "0.0.30",
        "@types/express": "^5.0.3",
        "@types/mocha": "^10.0.1",
        "@types/node": "^20.2.5",
        "@types/serve-static": "^1.15.0",
        "@types/sinon": "^10.0.13",
        "@types/verror": "^1.10.6",
        "@typescript-eslint/eslint-plugin": "^5.45.1",
        "@typescript-eslint/parser": "^5.45.1",
        "chai": "^4.3.7",
        "chai-as-promised": "^7.1.1",
        "data-driven": "^1.4.0",
        "eslint": "^8.29.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-plugin-prettier": "^4.2.1",
        "express": "^5.1.0",
        "http-status-codes": "^2.2.0",
        "mocha": "^10.1.0",
        "nyc": "^17.1.0",
        "prettier": "^2.8.0",
        "sinon": "^10.0.0",
        "ts-node": "^10.9.1",
        "typescript": "^5.1.3",
        "verror": "^1.10.1"
    }
}
